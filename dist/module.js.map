{"version":3,"sources":["../src/module.js"],"names":["makeBarChart","data","pconfig","fields","$","each","i","d","push","x","eval","settings","xSeriesData","y","ySeriesData","name","target","split","type","layout","xaxis","title","label","tickFormat","Plotly","d3","time","format","utc","range","yaxis","barmode","mode","showlegend","displayLegend","plot_bgcolor","paper_bgcolor","dragmode","font","newPlot","off","allowClickEvents","on","event","a","Function","onClickCallback","MetricsPanelCtrl","_","moment","angular","PlotlyPanelCtrl","$scope","$injector","$q","$rootScope","$timeout","$window","timeSrv","uiSegmentSrv","q","sizeChanged","initalized","$tooltip","console","log","extend","panel","events","onInitEditMode","bind","onRender","onDataReceived","onDataError","onPanelInitalized","onRefresh","cachedData","element","onResize","height","window","innerHeight","outerHeight","purge","err","addEditorTab","editorTabIndex","refresh","dataList","copy","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["\r\nimport {MetricsPanelCtrl} from  'app/plugins/sdk';\r\n\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport angular from 'angular';\r\n\r\nimport * as Plotly from './external/plotly';\r\n\r\nclass PlotlyPanelCtrl extends MetricsPanelCtrl {\r\n\r\n  constructor($scope, $injector, $q, $rootScope, $timeout, $window, timeSrv, uiSegmentSrv) {\r\n    super($scope, $injector);\r\n\r\n    this.$rootScope = $rootScope;\r\n    this.timeSrv = timeSrv;\r\n    this.uiSegmentSrv = uiSegmentSrv;\r\n    this.q = $q;\r\n\r\n    this.sizeChanged = true; \r\n    this.initalized = false;\r\n    \r\n    this.$tooltip = $('<div id=\"tooltip\" class=\"graph-tooltip\">');\r\n\r\n    console.log(\"Instantiated ...\");\r\n    this.layout = $.extend(true, {}, this.panel.pconfig.layout );\r\n\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('render', this.onRender.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('panel-initialized', this.onPanelInitalized.bind(this));\r\n    this.events.on('refresh', this.onRefresh.bind(this));\r\n    this.cachedData = null;\r\n\r\n    angular.element($window).bind('resize', this.onResize.bind(this) );\r\n  }\r\n\r\n  onResize() {\r\n    console.log(\"onResize()\");\r\n    this.sizeChanged = true;\r\n    if (this.cachedData != null) {\r\n        $('#plotlyChart').height($(window).innerHeight() - $('#menuBar').outerHeight() - $('#pageHeader').outerHeight() - 50);\r\n        Plotly.purge('plotlyChart');\r\n        makeBarChart(this.cachedData, this.panel.pconfig);\r\n\r\n    }\r\n  }\r\n\r\n  onDataError(err) {\r\n    console.log(\"onDataError\", err);\r\n  }\r\n\r\n  onRefresh() {\r\n    console.log(\"onRefresh()\")\r\n  }\r\n\r\n  onInitEditMode() {\r\n      console.log(\"onInitEditMode()\");\r\n      this.addEditorTab('Options', 'public/plugins/natel-plotly-panel/editor.html', 1);\r\n      this.editorTabIndex = 1;\r\n      this.refresh();\r\n  }\r\n\r\n  onSegsChanged() {\r\n    console.log( \"onSegsChanged()\" );\r\n  }\r\n\r\n  onPanelInitalized() {\r\n    console.log(\"onPanelInitalized()\")\r\n  }\r\n\r\n  onRender() {\r\n    console.log(\"onRender\");\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n      console.log(\"onDataRecieved\");\r\n      this.cachedData = angular.copy(dataList);\r\n      makeBarChart(dataList, this.panel.pconfig);\r\n  }\r\n\r\n  onConfigChanged() {\r\n      console.log(\"Config changed...\");\r\n      this.onResize();\r\n  }\r\n\r\n  //---------------------------\r\n\r\n    \r\n}\r\nPlotlyPanelCtrl.templateUrl = 'module.html';\r\n\r\nfunction makeBarChart(data, pconfig) {\r\n    var fields = [];\r\n    //var startDate = new Date(data.StartDate);\r\n    //var endDate = new Date(data.EndDate);\r\n\r\n    // The data should arrive as an array of objects that can be iterated through\r\n    // and the way the datapoints can be filtered can be entered through the UI\r\n    $.each(data, function (i, d) {\r\n        fields.push({\r\n            x: eval(pconfig.settings.xSeriesData),\r\n            y: eval(pconfig.settings.ySeriesData),\r\n            name: d.target.split('_')[1],\r\n            type: pconfig.settings.type\r\n        });\r\n    });\r\n\r\n    var layout = {\r\n        xaxis: {\r\n            title: pconfig.layout.xaxis.label,\r\n            type: pconfig.layout.xaxis.type,\r\n            tickFormat: Plotly.d3.time.format.utc(\"%m-%d\"),\r\n            range: []\r\n        },\r\n        yaxis: {\r\n            title: pconfig.layout.yaxis.label,\r\n            range: [],\r\n            type: pconfig.layout.yaxis.type\r\n        },\r\n        barmode: pconfig.settings.mode,\r\n        showlegend: pconfig.settings.displayLegend,\r\n        plot_bgcolor: pconfig.layout.plot_bgcolor,\r\n        paper_bgcolor: pconfig.layout.paper_bgcolor,\r\n        dragmode: pconfig.settings.dragmode,\r\n        font: pconfig.layout.font\r\n    };\r\n\r\n    Plotly.newPlot('plotlyChart', fields, layout);\r\n    $('#plotlyChart').off('plotly_click');\r\n\r\n    if (pconfig.settings.allowClickEvents) {\r\n        $('#plotlyChart').on('plotly_click', function (event, data) {\r\n            var a = new Function('event', 'data', pconfig.settings.onClickCallback);\r\n            a(event,data);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {\r\n  PlotlyPanelCtrl as PanelCtrl\r\n};\r\n\r\n\r\n"]}